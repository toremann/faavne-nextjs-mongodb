// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Stocks {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoriteIds    String[]  @db.ObjectId

  accounts   Account[]
  portfolios Portfolio[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

type StocksStats {
  date           DateTime @db.Date
  price          Float
  score          Float
  normalizeScore Int
}

model Stock {
  name           String
  nameLong       String
  symbol         String
  isin           String        @id @map("_id")
  price          Float
  pct            Float?
  dividend       Float?
  dividendDate   Int?
  excludingDate  Int?
  score          Float
  normalizeScore Int
  stats          StocksStats[]
}

model Portfolio {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  createdAt   DateTime @default(now())
  userId      String   @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
